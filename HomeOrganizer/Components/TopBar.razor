@using HomeOrganizer.Models.User;
@implements IDisposable
@inject UserService userService
@inject NavigationManager navigationManager

<MudThemeProvider @bind-IsDarkMode="@IsDarkMode" Theme="customTheme" />

<MudAppBar Color="Color.Inherit" Fixed="false" Dense="true">
    <MudPaper Class="mud-theme-transparent" Elevation="0" Style="width:300px">
        <MudButton StartIcon="@Icons.Material.Filled.Home" Color="Color.Inherit" ButtonType="ButtonType.Button" OnClick="GoHome">
            <MudText>
                Home organizer
            </MudText>
        </MudButton>

    </MudPaper>
    @if (User != null)
    {
        <MudSpacer />
        <MudPaper Class="mud-theme-transparent" Elevation="0" Width="300px" Height="100%" Style="line-height:48px">
            <MudText Align="Align.Center" Style="line-height:48px">
                @welcome
            </MudText>
        </MudPaper>
    }
    <MudSpacer />
    <MudPaper Class="mud-theme-transparent d-flex justify-end" Elevation="0" Width="300px" Height="100%" Style="line-height:48px">

        <MudToggleIconButton @bind-Toggled="@IsDarkMode"
                             Icon="@Icons.Material.Filled.NightsStay" Color="@Color.Tertiary" Title="Change theme to Dark"
                             ToggledIcon="@Icons.Material.Filled.WbSunny" ToggledColor="@Color.Tertiary" ToggledTitle="Change theme to Light" />
    </MudPaper>
</MudAppBar>

@code {
    public UserData User { get; set; }
    public bool IsDarkMode { get; set; } = false;
    private string welcome = string.Empty;

    private async void HandleUserUpdate()
    {
        User = userService.LoggedUser;

        if (User != null && welcome.Length == 0)
        {
            string[] welcomes = new string[] { "Hello", "Welcome", "Good day", "Yo, what's up", " Good to see you", "Welcome back" };
            welcome = $"{welcomes[Random.Shared.Next(welcomes.Length)]}, {User.Name}!";
        }

        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        User = userService.LoggedUser;
        userService.OnChange += HandleUserUpdate;
    }

    private void GoHome()
    {
        User.OpenedFeature = null;
        userService.LoggedUser = User;
        navigationManager.NavigateTo("/");
    }

    public void Dispose()
    {
        userService.OnChange -= HandleUserUpdate;
    }


    private MudTheme customTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                // Main colors
                Primary = Colors.Blue.Lighten1,
                Secondary = Colors.Teal.Lighten1,

                // Theme icon color...
                Tertiary = Colors.BlueGrey.Lighten1,

                // Main elements
                Background = Colors.LightBlue.Lighten4,


                // Appbar
                AppbarBackground = Colors.DeepOrange.Lighten2,
                AppbarText = Colors.Shades.Black
            },

            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Blue.Darken2,
                Secondary = Colors.Teal.Darken2,

                Tertiary = Colors.Amber.Lighten3,
            },

            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "260px",
                DrawerWidthRight = "300px"
            }
        };

}