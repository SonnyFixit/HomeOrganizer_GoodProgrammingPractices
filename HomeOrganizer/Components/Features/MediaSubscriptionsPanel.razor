@using HomeOrganizer.Common;
@using HomeOrganizer.Models.Bases;
@using HomeOrganizer.Models.Communication;
@using HomeOrganizer.Models.Features;
@using HomeOrganizer.Models.User;

@inject UserService userService
@inject NavigationManager navigationManager

@if (mediaSubscriptions == null)
{
    <MudPaper>
        <MudText Typo="Typo.h6">
            [Media Subscriptions Panel] Whoops... Media subscriptions are unknown!
        </MudText>
    </MudPaper>
    return;
}

<MudText Typo="Typo.h6">
    Media subscriptions: @mediaSubscriptions.TileData.UserGivenName
</MudText>
<MudText Typo="Typo.body1">
    You have @subscriptionsCount subscriptions!
</MudText>
<MudButton OnClick="AddSubscription">
    <MudText Typo="Typo.button">
        Add subscription
    </MudText>
</MudButton>

<div class="container" style="height:90%">
    <div class="row" style="height: 100px">
        <div style="height: 100%; width: 200px; background-color:red;" draggable="true">
            TEXT
        </div>
    </div>
</div>

@code {
    [Parameter]
    public FeatureBase? FeatureBase { get; set; }
    public MediaSubscriptions? mediaSubscriptions = null;

    private int subscriptionsCount = 0;

    private void AddSubscription()
    {
        subscriptionsCount++;
    }

    protected override void OnInitialized()
    {
        if (FeatureBase == null) return;
        if (FeatureBase is not MediaSubscriptions receivedFeature) return;
        mediaSubscriptions = receivedFeature;

        base.OnInitialized();
    }
}