@using HomeOrganizer.Common;
@using HomeOrganizer.Models.Bases;
@using HomeOrganizer.Models.Communication;
@using HomeOrganizer.Models.Features;
@using HomeOrganizer.Models.User;

@inject UserService userService
@inject NavigationManager navigationManager

@if (introduction == null)
{
    <MudPaper>
        <MudText Typo="Typo.h6">
            [@introduction.FeatureData.Name Panel] Whoops... @introduction.TileData.UserGivenName feature is unknown!
        </MudText>
    </MudPaper>
    return;
}

<MudText Typo="Typo.h6">
    @introduction.FeatureData.Name: @introduction.TileData.UserGivenName
</MudText>
<MudText Typo="Typo.body1">
    You have @subscriptionsCount subscriptions!
</MudText>
<MudButton OnClick="AddSubscription">
    <MudText Typo="Typo.button">
        Add subscription
    </MudText>
</MudButton>

@code {
    [Parameter]
    public FeatureBase? FeatureBase { get; set; }
    public Introduction? introduction = null;

    private int subscriptionsCount = 0;

    private void AddSubscription()
    {
        subscriptionsCount++;
    }

    protected override void OnInitialized()
    {
        if (FeatureBase == null) return;
        if (FeatureBase is not Introduction receivedFeature) return;
        introduction = receivedFeature;

        base.OnInitialized();
    }
}