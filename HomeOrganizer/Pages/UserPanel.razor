@using HomeOrganizer.Components
@using HomeOrganizer.Components.Dialogs;
@using HomeOrganizer.Components.Errors
@using HomeOrganizer.Components.Features;
@using HomeOrganizer.Models.Bases;
@using HomeOrganizer.Models.Features;
@using HomeOrganizer.Models.User;
@using MudBlazor.Services;
@using MyWebsiteBlazor.Data.Database;
@using System.Reflection;

@inject UserService userService
@inject IDialogService DialogService
@inject NavigationManager navigationManager

@page "/UserPanel"
<PageTitle> Home Organizer </PageTitle>

@if (user == null)
{
    <UserPanelError />
}
else
{
    <MudPaper Width="960px" Height="500px" Class="mx-auto mt-10 mud-theme-transparent" Elevation="0">

        <MudStack Row="true" Style="width:100%; height:100%;" Justify="Justify.SpaceBetween" Class="mud-theme-transparent">
            <MudPaper Width="180px" Class="mud-theme-transparent" Elevation="0">
                @if (!user.RightUserPanelNavigation)
                {
                    <UserPanelNavigation IsRightSide="user.RightUserPanelNavigation"
                                         OnSideChange="HandleSideChange"
                                         OnNavigationChanged="HandleNavigationChanged" />
                }

            </MudPaper>
            <MudPaper Width="540px" Class="pa-4" Elevation="0">

                @if (selectedPanel == null || parameters == null)
                {
                    <NoUserPanelError />
                }
                else
                {
                    <DynamicComponent Type="@selectedPanel" Parameters="@parameters" />
                }

            </MudPaper>
            <MudPaper Width="180px" Class="mud-theme-transparent" Elevation="0">
                @if (user.RightUserPanelNavigation)
                {
                    <UserPanelNavigation IsRightSide="user.RightUserPanelNavigation"
                                         OnSideChange="HandleSideChange"
                                         OnNavigationChanged="HandleNavigationChanged" />
                }
            </MudPaper>
        </MudStack>

    </MudPaper>
}


@code {
    UserData? user = null;

    private Type? selectedPanel = null;
    private Dictionary<string, object>? parameters = null;

    private void HandleSideChange()
    {
        if (user == null) return;
        user.RightUserPanelNavigation = !user.RightUserPanelNavigation;
        userService.LoggedUser = user;
    }

    private void HandleNavigationChanged(string changedTo)
    {
        if (string.IsNullOrEmpty(changedTo)) return;

        selectedPanel = Common.DynamicComponentMenager.GetUserPanelType(changedTo + "Panel");

        parameters = new Dictionary<string, object>()
            {
            {"User", user}
            };
    }

    protected override void OnInitialized()
    {
        user = userService.LoggedUser;
        if (user == null) return;
        // HandleNavigationChanged("Details");
        base.OnInitialized();
    }

    private void GoHome()
    {
        navigationManager.NavigateTo("/");
    }
}
