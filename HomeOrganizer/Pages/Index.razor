@using HomeOrganizer.Components
@using HomeOrganizer.Models.User;

@page "/"

<PageTitle> Home Organizer </PageTitle>

<TopBar User="@User" />
@if (User == null)
{
    <MudContainer Class="content px-4" Style="height:90%" MaxWidth="MaxWidth.Large">
        @* // Very bad way to do this -> needs better solution!!!
    // Maybe create component -> login panel? *@
        <MudGrid Justify="Justify.Center" Class="align-content-center" Style="height:100%">
            <MudItem>
                <MudPaper Class="d-flex flex-column align-center justify-center mud-width-full py-8" Height="180px" Width="300px">
                    <MudText Align="Align.Center" Typo="Typo.body1">
                        Welcome on Home Organizer,
                        register account to use our application!
                    </MudText>
                    <MudButton OnClick="LoginUser" EndIcon="@Icons.Material.Filled.Login" IconColor="Color.Success" Variant="Variant.Outlined">
                        LOGIN
                    </MudButton>
                </MudPaper>
            </MudItem>
        </MudGrid>

    </MudContainer>
}
else
{
    <MudContainer Class="content pt-4" MaxWidth="MaxWidth.ExtraLarge" Style="height: 90%; display: flex; flex-direction: column;">
        <MudGrid>

            @foreach (var feature in User.Features)
            {
                if (feature == null || !feature.IsUsed) continue;
                <FeatureTile TileData="@feature" />
            }

        </MudGrid>
        <MudGrid Justify="Justify.Center" Style="margin-top: auto;">
            <AddFeatureTile UserData="User" UserDataChanged="HandleUserDataChanged" />
        </MudGrid>
    </MudContainer>
}

@code {
    protected UserData User { get; set; }
    private void HandleUserDataChanged(UserData updatedUser)
    {
        User = updatedUser;
    }

    bool autoLoginAdming = false;

    private void LoginUser()
    {
        User = UserData.CreateAdmin();
    }

    protected override void OnInitialized()
    {
        if (autoLoginAdming) LoginUser();
        base.OnInitialized();
    }
}