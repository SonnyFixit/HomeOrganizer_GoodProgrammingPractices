@using HomeOrganizer.Common;
@using HomeOrganizer.Models.Communication;
@using HomeOrganizer.Models.Features;
@using HomeOrganizer.Models.User;

@inject UserService userService
@inject NavigationManager navigationManager

@page "/Create[Feature.Data.PageName]"

@if (User == null)
{
    <MudText Typo="Typo.h6">
        SOMETHING WENT WRONG???????
    </MudText>
}
else
{
    @* Create form for feature fields (not FeatureData!) *@
}

@code {
    private UserData User;

    protected override void OnInitialized()
    {
        User = userService.LoggedUser;
        base.OnInitialized();
    }

    private void CreateFeature()
    {
        // Collect data from form and create feature
        //IFeature feature = new FeatureThatImplements IFeature();
        //feature.Data.UserGivenName = "Name from form";
        //feature.Data.UserGivenDescription = "Description from form";
        //feature.Data.IsUsed = true;

        //Response addResponse = User.AddFeature(feature);
        //if (addResponse.Status)
        //{
        //    userService.LoggedUser = User;
        //    navigationManager.NavigateTo("/");
        //}
        //else
        //{
        //    // Show message
        //}
    }
}